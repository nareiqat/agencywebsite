---
import { Image } from "astro:assets";
import landing from "../assets/images/earth.jpg";
import cat from "../assets/svgs/cat.svg";
import OfferModal from "./OfferModal.astro";
---

<!-- ============================================ --><!--                    Hero                      --><!-- ============================================ -->
<section id="hero-1352">
  <div class="cs-container">
    <OfferModal />
    <div class="cs-content">
      <span class="cs-topper">NCAT Digital Agency</span>
      <h1 class="cs-title">Small Business Web Design & Development</h1>
      <p class="cs-text">
        No page builders or WordPress - We offer superior 100% hand-coded
        websites with starting at $150/mo.
      </p>
      <a href="/contact" class="cs-button-solid">Free Consultation</a>
    </div>
    <div class="cs-picture">
      <Image
        aria-hidden="true"
        decoding="async"
        src={cat}
        loading={"eager"}
        alt="ncat digital cat, our mascot"
        width="468"
        height="658"
      />
    </div>
  </div>
  <!--Bubble Groups-->
  <div class="cs-bubbles cs-bubbles1" aria-hidden="true"></div>
  <div class="cs-bubbles cs-bubbles2" aria-hidden="true"></div>
  <!-- Background Image, background image added in the css at 1600px for parallax effect -->
  <div class="cs-background">
    <Image
      decoding="async"
      src={landing}
      alt="landing image should earth from space"
      width="2250"
      height="1500"
      aria-hidden="true"
    />
  </div>
</section>

<style lang="less">
  /*-- -------------------------- -->
<---           Hero             -->
<--- -------------------------- -*/

  /* Mobile - 360px */
  @media only screen and (min-width: 0rem) {
    @keyframes floatAnimation {
      0% {
        transform: translateY(0);
      }
      50% {
        transform: translateY(-2rem);
      }
      100% {
        transform: translateY(0);
      }
    }

    @keyframes floatAnimation2 {
      0% {
        transform: translateY(0);
      }
      50% {
        transform: translateY(-3rem);
      }
      100% {
        transform: translateY(0);
      }
    }

    #hero-1352 {
      /* 250px - 500px - leaving extra space for the navigation */
      padding: clamp(15.625rem, 35.95vw, 25rem) (16/16rem) 0;
      padding-bottom: 0;
      box-sizing: border-box;
      overflow: hidden;
      position: relative;
      z-index: 1;
      background-color: black;

      &:before {
        /* Overlay */
        content: "";
        width: 100%;
        height: 30%;
        background: -webkit-gradient(
          linear,
          left top,
          left bottom,
          from(rgba(0, 0, 0, 1)),
          to(rgba(0, 0, 0, 0))
        );
        background: -o-linear-gradient(
          top,
          rgba(0, 0, 0, 1) 0%,
          rgba(0, 0, 0, 0) 100%
        );
        background: linear-gradient(
          to bottom,
          rgba(0, 0, 0, 1) 0%,
          rgba(0, 0, 0, 0) 100%
        );
        opacity: 1;
        position: absolute;
        display: block;
        top: 0;
        left: 0;
        z-index: 2;
        /* prevents the cursor from interacting with it */
        pointer-events: none;
      }

      .cs-container {
        width: 100%;
        max-width: (1280/16rem);
        margin: auto;
        display: flex;
        justify-content: center;
        flex-direction: column;
        align-items: center;
        /* 48px - 64px */
        gap: clamp(3rem, 6vw, 4rem);
        position: relative;
      }

      .cs-content {
        /* set text align to left if content needs to be left aligned */
        text-align: center;
        width: 100%;
        max-width: (630/16rem);
        display: flex;
        flex-direction: column;
        /* centers content horizontally, set to flex-start to left align */
        align-items: center;
      }

      .cs-topper {
        font-size: (20/16rem);
        line-height: 1.2em;
        text-transform: uppercase;
        text-align: inherit;
        letter-spacing: 0.1em;
        font-weight: 700;
        margin-bottom: (8/16rem);
        display: block;
      }

      .cs-title {
        /* 39px - 61px */
        font-size: clamp(2.4375rem, 6.4vw, 3.8125rem);
        font-weight: 700;
        line-height: 1.2em;
        text-align: inherit;
        max-width: 20ch;
        margin: 0 0 (16/16rem) 0;
        position: relative;
        color: var(--secondaryLight);
      }

      .cs-text {
        font-size: (20/16rem);
        line-height: 1.5em;
        text-align: inherit;
        width: 100%;
        /* 464px - 622px */
        max-width: clamp(29rem, 60vw, 38.785rem);
        margin: 0 0 (40/16rem) 0;
        color: var(--bodyTextColorWhite);
      }

      .cs-button-solid {
        font-size: (16/16rem);
        text-decoration: none;
        font-weight: 700;
        overflow: hidden;
        margin: 0;
        color: var(--bodyTextColorWhite);
        padding: 0 (48/16rem);
        border-radius: (30/16rem);
        background-color: var(--secondary);
        display: inline-block;
        position: relative;
        z-index: 1;
        transition: color 0.3s;

        &:before {
          content: "";
          position: absolute;
          display: block;
          height: 100%;
          width: 0%;
          background: var(--bodyTextColorWhite);
          opacity: 1;
          top: 0;
          left: 0;
          z-index: -1;
          transition: width 0.3s;
        }

        &:hover {
          color: var(--primaryLight);
          &:before {
            width: 100%;
          }
        }
      }

      .cs-picture {
        width: 100%;
        /* 427px - 621px */
        max-width: clamp(26.6875rem, 75vw, 38.8125rem);
        height: auto;
        display: flex;
        align-items: flex-end;
        position: relative;
        z-index: 7;

        img {
          width: 100%;
          height: auto;
        }
      }

      .cs-bubbles {
        /* this scales the children inside of it down. They're all in ems so they pull from the parent font size for their value of em, in this case, the value of em is tied to the viewwidth size and stops growing when the font size is equal to 1em, which it pulls from the nearst parent with a declred font size (which is the html tag, and that tag is 16px by default) */
        font-size: ~"min(2.9vw, .9em)";
        position: absolute;
        z-index: -1;
      }

      .cs-bubbles1 {
        width: (680/16em);
        height: (724/16em);
        right: (-190/16rem);
        /* changes to 172 at large desktop */
        bottom: (-100/16rem);

        &:before {
          /* white border bubble */
          content: "";
          width: (622/16em);
          height: (622/16em);
          background: transparent;
          border: 1px solid #fff;
          border-radius: 50%;
          opacity: 1;
          position: absolute;
          display: block;
          top: 0;
          left: 0;
          animation-name: floatAnimation;
          animation-duration: 7s;
          animation-timing-function: ease-in-out;
          animation-fill-mode: forwards;
          animation-iteration-count: infinite;
        }

        &:after {
          /* orange bubble */
          content: "";
          width: (546/16em);
          height: (546/16em);
          background: var(--secondaryLight);
          opacity: 0.8;
          border-radius: 50%;
          display: block;
          position: absolute;
          bottom: 0;
          right: 0;
          z-index: -1;
          animation-name: floatAnimation2;
          animation-duration: 10s;
          animation-timing-function: ease-in-out;
          animation-fill-mode: forwards;
          animation-iteration-count: infinite;
        }
      }

      .cs-bubbles2 {
        width: (330/16rem);
        height: (476/16rem);
        /* changes to 160px at larger desktop */
        left: (-260/16rem);
        /* removed at larger desktop */
        top: (60/16rem);

        &:before {
          /* white border bubble */
          content: "";
          width: (330/16rem);
          height: (330/16rem);
          background: transparent;
          border: 1px solid #fff;
          border-radius: 50%;
          opacity: 1;
          position: absolute;
          display: block;
          bottom: 0;
          right: 0;
          animation-name: floatAnimation;
          animation-duration: 5s;
          animation-timing-function: ease-in-out;
          animation-fill-mode: forwards;
          animation-iteration-count: infinite;
        }

        &:after {
          /* orange bubble */
          content: "";
          width: (260/16rem);
          height: (260/16rem);
          background: var(--secondaryLight);
          opacity: 0.8;
          border-radius: 50%;
          display: block;
          position: absolute;
          top: 0;
          right: (40/16rem);
          z-index: -1;
          animation-name: floatAnimation2;
          animation-duration: 14s;
          animation-timing-function: ease-in-out;
          animation-fill-mode: forwards;
          animation-iteration-count: infinite;
        }
      }

      .cs-background {
        width: 100%;
        height: 100%;
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -2;

        img {
          position: absolute;
          top: 0;
          left: 0;
          height: 100%;
          width: 100%;
          object-fit: cover;
          /* makes the top of the image start at the top of the parent */
          object-position: top;
        }
      }
    }
  }

  /* Tablet - 768px */
  @media only screen and (min-width: 48rem) {
    #hero-1352 {
      /* 180px - 250px */
      padding-bottom: clamp(11.25rem, 16.5vw, 15.625rem);

      .cs-container {
        flex-direction: row;
        justify-content: space-between;
      }

      .cs-content {
        text-align: left;
        width: 53%;
        align-items: flex-start;
      }

      .cs-picture {
        width: 100%;
        position: absolute;
        bottom: (-400/16rem);
        right: (-160/16rem);
      }

      .cs-topper {
        color: var(--secondary);
      }

      .cs-bubbles {
        font-size: 1em;
      }

      .cs-bubbles1 {
        /* changes to auto at large desktop */
        right: (-300/16rem);
      }
    }
  }

  /* Desktop - 1024px */
  @media only screen and (min-width: 48rem) {
    #hero-1352 {
      .cs-picture {
        bottom: (-230/16rem);
      }
    }
  }

  /* Large Desktop - 1300px */
  @media only screen and (min-width: 81.25rem) {
    #hero-1352 {
      .cs-container {
        position: initial;
      }

      .cs-picture {
        margin-left: (70/16rem);
        left: 50%;
        right: auto;
        bottom: -1px;
      }

      .cs-bubbles1 {
        /* 200px - 450px */
        margin-left: clamp(12.5rem, 20vw, 28.125rem);
        top: (172/16rem);
        right: auto;
        bottom: auto;
        left: 50%;
      }
    }
  }

  /* Large Desktop Parallax Effect - 1600px */
  @media only screen and (min-width: 0rem) {
    #hero-1352 {
      .cs-background {
        background: url("../assets/images/earth.jpg");
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        background-attachment: fixed;
        opacity: 0.3;
        img {
          display: none;
        }
      }
    }
  }

  /* Larger Desktop - 1800px */
  @media only screen and (min-width: 112.5rem) {
    #hero-1352 {
      .cs-bubbles2 {
        margin-right: (800/16rem);
        right: 50%;
        left: auto;
        top: (210/16rem);
        bottom: auto;
      }
    }
  }

</style>
